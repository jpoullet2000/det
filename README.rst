=============================
Data Engineering Toolkit
=============================

Based on a REST API (Swagger generated server), it provides different services such as the creation of HDFS file/folders and their underlying purge/archiving, the access of cluster services and their parameters, etc.  

Overview
--------
This server was generated by the `swagger-codegen`_ project. By using the `OpenAPI-Spec`_ from a remote server, you can easily generate a server stub. This is an example of building a swagger-enabled Flask server.

This example uses the `Connexion`_ library on top of Flask.

.. _swagger-codegen: https://github.com/swagger-api/swagger-codegen
.. _OpenAPI-Spec: https://github.com/swagger-api/swagger-core/wiki
.. _Connexion: https://github.com/zalando/connexion  

Requirements
------------
Python 3.5+

Usage
-----
To run the server, please execute the following from the root directory:: 

  pip install -r requirements.txt
  det runserver 


and open your browser to here:: 

  http://localhost:8888/detapi/0.0.1/ui/

Your Swagger definition lives here::

  http://localhost:8888/detapi/0.0.1/swagger.json


To launch the integration tests, use tox::
 
  sudo pip install tox
  tox


Running with Docker
-------------------
To run the server on a Docker container, please execute the following from the root directory:: 

  # building the image
  docker build -t det .

  # starting up a container
  docker run -p 8888:8888 det


Development
-----------
The API is based on the `swagger/swagger.yaml` file.
Code is generated with the `swagger code generator`_.
To run the code generator::

  java -jar <path_to_swagger-codegen-cli.jar_dir>/swagger-codegen-cli.jar generate -i det/swagger/swagger.yml -l python-flask -o <output_dir> -c det/swagger/python_codegen_config.json

.. _`swagger code generator`: https://github.com/swagger-api/swagger-codegen 
 
