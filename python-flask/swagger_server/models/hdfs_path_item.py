# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HdfsPathItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name=None, qualified_name=None, path=None, cluster_name=None):  # noqa: E501
        """HdfsPathItem - a model defined in Swagger

        :param name: The name of this HdfsPathItem.  # noqa: E501
        :type name: str
        :param qualified_name: The qualified_name of this HdfsPathItem.  # noqa: E501
        :type qualified_name: str
        :param path: The path of this HdfsPathItem.  # noqa: E501
        :type path: str
        :param cluster_name: The cluster_name of this HdfsPathItem.  # noqa: E501
        :type cluster_name: str
        """
        self.swagger_types = {
            'name': str,
            'qualified_name': str,
            'path': str,
            'cluster_name': str
        }

        self.attribute_map = {
            'name': 'name',
            'qualified_name': 'qualifiedName',
            'path': 'path',
            'cluster_name': 'clusterName'
        }

        self._name = name
        self._qualified_name = qualified_name
        self._path = path
        self._cluster_name = cluster_name

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HdfsPathItem of this HdfsPathItem.  # noqa: E501
        :rtype: HdfsPathItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this HdfsPathItem.


        :return: The name of this HdfsPathItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HdfsPathItem.


        :param name: The name of this HdfsPathItem.
        :type name: str
        """

        self._name = name

    @property
    def qualified_name(self):
        """Gets the qualified_name of this HdfsPathItem.


        :return: The qualified_name of this HdfsPathItem.
        :rtype: str
        """
        return self._qualified_name

    @qualified_name.setter
    def qualified_name(self, qualified_name):
        """Sets the qualified_name of this HdfsPathItem.


        :param qualified_name: The qualified_name of this HdfsPathItem.
        :type qualified_name: str
        """

        self._qualified_name = qualified_name

    @property
    def path(self):
        """Gets the path of this HdfsPathItem.


        :return: The path of this HdfsPathItem.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this HdfsPathItem.


        :param path: The path of this HdfsPathItem.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def cluster_name(self):
        """Gets the cluster_name of this HdfsPathItem.


        :return: The cluster_name of this HdfsPathItem.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this HdfsPathItem.


        :param cluster_name: The cluster_name of this HdfsPathItem.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name
