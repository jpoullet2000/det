# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.dataset import Dataset  # noqa: F401,E501
from swagger_server import util


class Process(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name=None, inputs=None, outputs=None):  # noqa: E501
        """Process - a model defined in Swagger

        :param name: The name of this Process.  # noqa: E501
        :type name: str
        :param inputs: The inputs of this Process.  # noqa: E501
        :type inputs: List[Dataset]
        :param outputs: The outputs of this Process.  # noqa: E501
        :type outputs: List[Dataset]
        """
        self.swagger_types = {
            'name': str,
            'inputs': List[Dataset],
            'outputs': List[Dataset]
        }

        self.attribute_map = {
            'name': 'name',
            'inputs': 'inputs',
            'outputs': 'outputs'
        }

        self._name = name
        self._inputs = inputs
        self._outputs = outputs

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Process of this Process.  # noqa: E501
        :rtype: Process
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Process.


        :return: The name of this Process.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Process.


        :param name: The name of this Process.
        :type name: str
        """

        self._name = name

    @property
    def inputs(self):
        """Gets the inputs of this Process.


        :return: The inputs of this Process.
        :rtype: List[Dataset]
        """
        return self._inputs

    @inputs.setter
    def inputs(self, inputs):
        """Sets the inputs of this Process.


        :param inputs: The inputs of this Process.
        :type inputs: List[Dataset]
        """

        self._inputs = inputs

    @property
    def outputs(self):
        """Gets the outputs of this Process.


        :return: The outputs of this Process.
        :rtype: List[Dataset]
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this Process.


        :param outputs: The outputs of this Process.
        :type outputs: List[Dataset]
        """

        self._outputs = outputs
