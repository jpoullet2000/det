{
  "swagger" : "2.0",
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/detapi/0.0.1",
  "schemes" : [ "https" ],
  "info" : {
    "description" : "This is a simple API",
    "version" : "0.0.1",
    "title" : "Data engineering toolkit API",
    "contact" : {
      "email" : "jeanbaptistepoullet@statrgy.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/typedefs" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "create type definitions",
        "operationId" : "addTypedefs",
        "description" : "Create type definitions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Typedefs",
          "description" : "Typedefs",
          "schema" : {
            "$ref" : "#/definitions/TypedefsItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/typedefs/classificationdefs" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "get classification defs",
        "description" : "Get the classification or tag definitions\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "A list of classifications defs.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClassificationDefsItem"
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/typedefs/entitydefs" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "get entity defs",
        "description" : "Get the entity definitions\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "A list of entity defs.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EntityDefsItem"
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/typedefs/enumdefs" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "get enum defs",
        "description" : "Get the enum definitions\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "A list of enum defs.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EnumDefsItem"
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/entity/hdfs_path" : {
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "create hdfs_path",
        "operationId" : "createHdfsPath",
        "description" : "Add hdfs path\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "hdfsPath",
          "description" : "Hdfs path to add",
          "schema" : {
            "$ref" : "#/definitions/HdfsPathItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/entity/hdfs_path/maintain" : {
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "Maintenance of hdfs_path",
        "operationId" : "hdfsMaintenance",
        "description" : "Maintenance of hdfs_path - archiving/compressing/purging\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "hdfsPath",
          "description" : "Hdfs path to maintain",
          "schema" : {
            "$ref" : "#/definitions/HdfsPathItem"
          }
        }, {
          "$ref" : "#/parameters/HdfsMaintenanceServices"
        } ],
        "responses" : {
          "400" : {
            "$ref" : "#/responses/BadRequest"
          }
        }
      }
    },
    "/process" : {
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "Create process",
        "operationId" : "createProcess",
        "description" : "Maintenance of hdfs_path - archiving/compressing/purging\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "process",
          "description" : "Create process",
          "schema" : {
            "$ref" : "#/definitions/Process"
          }
        } ],
        "responses" : {
          "400" : {
            "$ref" : "#/responses/BadRequest"
          }
        }
      }
    },
    "/clusters" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "get cluster names",
        "description" : "Get the cluster names\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "A list of clusters.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Cluster"
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/clusters/{cluster_id}" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "get cluster info",
        "description" : "Get the cluster info\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "cluster_id",
          "type" : "string",
          "required" : true,
          "description" : "cluster identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "Cluster info.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Cluster"
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/responses/UnauthorizedError"
          }
        }
      }
    },
    "/clusters/{cluster_id}/services" : {
      "get" : {
        "tags" : [ "developers" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "cluster_id",
          "type" : "string",
          "required" : true,
          "description" : "cluster identifier"
        } ],
        "summary" : "get cluster services",
        "description" : "Get the services from the specified cluster\n",
        "responses" : {
          "200" : {
            "description" : "Cluster services.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Cluster"
              }
            }
          },
          "400" : {
            "$ref" : "#/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "parameters" : {
    "HdfsMaintenanceServices" : {
      "in" : "query",
      "name" : "HdfsMaintenanceService",
      "description" : "all/archive/purge/compress",
      "type" : "string",
      "enum" : [ "all", "archive", "purge", "compress" ]
    }
  },
  "definitions" : {
    "ElementDefsItem" : {
      "type" : "object",
      "required" : [ "value", "ordinal" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "example" : "dwh"
        },
        "ordinal" : {
          "type" : "integer",
          "example" : 1
        }
      }
    },
    "EntityDefsItem" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "category" : {
          "type" : "string",
          "example" : "ENTITY",
          "enum" : [ "ENTITY" ]
        },
        "name" : {
          "type" : "string",
          "example" : "data_delivery"
        },
        "description" : {
          "type" : "string",
          "example" : "A subtype of Process that delivers data on the ata lake."
        },
        "typeVersion" : {
          "type" : "string",
          "example" : "1.0"
        },
        "attributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDefsItem"
          }
        },
        "superTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "example" : [ "Process" ]
        }
      }
    },
    "ClassificationDefsItem" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "category" : {
          "type" : "string",
          "example" : "CLASSIFICATION",
          "enum" : [ "CLASSIFICATION" ]
        },
        "name" : {
          "type" : "string",
          "example" : "CL_WR"
        },
        "description" : {
          "type" : "string",
          "example" : "Competition Law Wholesale and Retail"
        },
        "superTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDefsItem"
          }
        }
      }
    },
    "EnumDefsItem" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "category" : {
          "type" : "string",
          "example" : "ENUM",
          "enum" : [ "ENUM" ]
        },
        "name" : {
          "type" : "string",
          "example" : "data_delivery_apps"
        },
        "description" : {
          "type" : "string",
          "example" : "Enumeration of data delivery applications"
        },
        "typeVersion" : {
          "type" : "string",
          "example" : "1.0"
        },
        "elementDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ElementDefsItem"
          }
        }
      }
    },
    "AttributeDefsItem" : {
      "type" : "object",
      "required" : [ "name", "typeName" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "delivery_application_acronym"
        },
        "typeName" : {
          "type" : "string",
          "example" : "data_delivery_apps"
        },
        "isOptional" : {
          "type" : "boolean",
          "example" : false
        },
        "cardinality" : {
          "type" : "string",
          "example" : "SINGLE"
        },
        "valuesMinCount" : {
          "type" : "integer",
          "example" : 1
        },
        "valuesMaxCount" : {
          "type" : "integer",
          "example" : 1
        },
        "isUnique" : {
          "type" : "boolean",
          "example" : false
        },
        "isIndexable" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "Environments" : {
      "type" : "string",
      "example" : "d0",
      "enum" : [ "p0", "a7", "t0", "d0" ]
    },
    "HdfsPathItem" : {
      "type" : "object",
      "required" : [ "data_code", "env" ],
      "properties" : {
        "datacode" : {
          "type" : "string",
          "example" : "data",
          "enum" : [ "data", "code" ]
        },
        "env" : {
          "$ref" : "#/definitions/Environments"
        }
      }
    },
    "Cluster" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "prod-datalake"
        }
      }
    },
    "Process" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "ada_hdfs2staging"
        },
        "inputs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Dataset"
          }
        },
        "outputs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Dataset"
          }
        }
      }
    },
    "Dataset" : {
      "type" : "object",
      "description" : "Dataset",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "/env/p0/dwh/ada/hdfsfile"
        }
      }
    },
    "TypedefsItem" : {
      "type" : "object",
      "properties" : {
        "classificationDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClassificationDefsItem"
          }
        },
        "enumDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnumDefsItem"
          }
        },
        "entityDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityDefsItem"
          }
        }
      }
    }
  },
  "responses" : {
    "UnauthorizedError" : {
      "description" : "Access token is missing or invalid"
    },
    "BadRequest" : {
      "description" : "invalid input, object invalid"
    }
  }
}